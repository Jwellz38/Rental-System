id
name
quantity
description
centrification_required 
link of image
price_regular
price_alumni
price_member1
price_member2


Create

CREATE TABLE `sac`.`inventory` (`id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY, `name` TEXT NOT NULL, `quantity` INT NOT NULL, `description` LONGTEXT NOT NULL, `req_cert` CHAR(3) NOT NULL, `img_address` TEXT NOT NULL, `regular_price` FLOAT NOT NULL, `alumni_price` FLOAT NOT NULL, `mem1_price` FLOAT NOT NULL, `mem2_price` FLOAT NOT NULL) ENGINE = MyISAM;


insert Skeleton

INSERT INTO  `sac`.`inventory` (
`id` ,
`name` ,
`quantity` ,
`description` ,
`req_cert` ,
`img_address` ,
`regular_price` ,
`alumni_price` ,
`mem1_price` ,
`mem2_price`


insert example

INSERT INTO `sac`.`inventory` (`id`, `name`, `quantity`, `description`, `req_cert`, `img_address`, `regular_price`, `alumni_price`, `mem1_price`, `mem2_price`) VALUES ('1', 'Single Sit on Top Kayaks', '84', 'Single Sit on Top Kayak is one of hour popular products. This product doesn''t require any class.
This unite supports weight unto 400 lbs.
', 'A', 'images/sk.png', '9', '7', '6', '5')



==========================================================================================
Person Table
=============
ID
FIRST NAME
LAST NAME
PHONE #
EMAIL 
CERT1
CERT2
CERT3
CERT4 //MAY HAVE MORE CERTS
PERSON TYPE // TYPES MAYBE 1> ADMIN 2> STAFF 3> CUSTOMER
BOOLEAN // 18 OR NOT


SQL MAke Command
==============
CREATE TABLE  `sac`.`users` (
`ID` SERIAL NOT NULL AUTO_INCREMENT PRIMARY KEY ,
`FirstName` TEXT NOT NULL ,
`LastName` TEXT NOT NULL ,
`phone` TEXT NOT NULL ,
`email` TEXT NOT NULL ,
`cert1` INT NOT NULL ,
`cert2` INT NOT NULL ,
`cert3` INT NOT NULL ,
`cert4` INT NOT NULL ,
`clearance` INT NOT NULL ,
`is18` BOOLEAN NOT NULL
) ENGINE = MYISAM ;




Make Certifications table

CREATE TABLE  `sac`.`certificationsUsers` (
`id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
`ufk` INT NOT NULL ,
`desc` TEXT NOT NULL
) ENGINE = MYISAM ;

INSERT INTO  `sac`.`certificationsUsers` (
`id` ,
`ufk` ,
`desc`
)
VALUES (
NULL ,  '5',  'Being awesome certification'
);






Trip
================
ID
TransActionID *FK
P.ID *FK
Total_price //includes what may or may not have been paid 
	   //Total_price is not needed as it can be done by calculations.
Boolean(Paid or not)


CREATE TABLE  `sac`.`Trip` (
`id` INT NOT NULL AUTO_INCREMENT ,
`fkid` INT NOT NULL ,
`paid` BOOLEAN NOT NULL ,
`date` DATETIME NOT NULL ,
PRIMARY KEY (  `id` )
) ENGINE = MYISAM ;

















Transactions
===============





CREATE TABLE  `sac`.`transactions` (
`id` INT NOT NULL AUTO_INCREMENT ,
`startTime` TIMESTAMP NOT NULL ,
`endTime` TIMESTAMP NOT NULL ,
`total_price` FLOAT NOT NULL ,
`paid` BOOLEAN NOT NULL ,
`equipmentName` TEXT NOT NULL ,
`tripID` INT NOT NULL ,
PRIMARY KEY (  `id` )
) ENGINE = MYISAM ;